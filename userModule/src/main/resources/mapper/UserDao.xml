<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bluemsun.dao.UserDao">

<resultMap id="userMap" type="com.bluemsun.entity.User">
<id column="user_id" property="userId"/>
<result column="username" property="username"/>
    <result column="password" property="password"/>
    <result column="create_time" property="createTime"/>
<!--    <result column="last_editTime" property="lastEditTime"/>-->
    <result column="email" property="email"/>
<!--    <result column="security_question" property="securityQuestion"/>-->
<!--    <result column="question_answer" property="questionAnswer"/>-->
<!--    <result column="status" property="status"/>-->
<!--    <result column="available" property="available"/>-->
</resultMap>

    <select id="getUserAvailable" resultType="Integer">
        select available
        from tb_user
        where username=#{userName} or email=#{userName}
    </select>
<insert id="uploadRegisterInfo"   useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id" >
INSERT INTO
tb_user(username,password,create_time,email)
VALUES
(#{username},#{password},now(),#{email})
</insert>
<select id="checkOutUserName" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM tb_user
        WHERE username =#{userName} OR email=#{userName}
</select>
<select id="checkOutEmail" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM tb_user
        WHERE email =#{email}
</select>
    <select id="CheckLogin"  resultMap="userMap">
        SELECT user_id,create_time,username,email
        FROM tb_user
        WHERE password =#{password}
        and email =#{userName}
    </select>
<select id="getSerQuestion" resultType="Integer" >
    SELECT security_question
    from tb_user
    where username=#{userName} or email=#{userName}
</select>
    <select id="CheckPasswordTime" resultType="java.util.Date" >
        SELECT last_editTime
        from tb_user
        WHERE user_id=#{userId}
    </select>


    <select id="listNowUser" parameterType="int" resultMap="userMap">
        SELECT user_id,username,status,available,last_editTime,create_time,email
        FROM tb_user
        order by available asc , status desc,user_id desc
        LIMIT #{startIndex},#{pageSize};
    </select>
    <select id="getAllUser" resultMap="userMap">
    SELECT user_id,username,status,available,last_editTime,create_time,email
    from tb_user
    order by available asc , status desc ,create_time desc
    </select>

    <update id="UpdateUserAvailableAndStatus" >
        update tb_user
        set status =#{status},available=#{available}
        where user_id=#{userId}
    </update>

<update id="UpdateUserPassword">
    update tb_user
    <set>
        <if test="password !=null">password=#{password}</if>
    </set>
    where user_id=#{userId}
</update>
    <update id="UpdateUserPassword2">
        update tb_user
        <set>
            <if test="password !=null">password=#{password}</if>
        </set>
        where  email=#{userName}
    </update>
    <update id="updateUserName">
        update tb_user
        <set>
            <if test="username != null">username=#{username}</if>
        </set>
        where user_id = #{userId}
    </update>
    <select id="getUserCount" resultType="int">
        select COUNT(*)
        from tb_user
    </select>
<select id="CheckUserPassword" resultType="int">
    select COUNT(*)
    from tb_user
    where password=#{password}
</select>
    <select id="getEmail"  resultType="String">
        SELECT email
        from tb_user
        where username=#{userName} or email=#{userName}
    </select>
    <select id="checkOutUserSerQuestion" resultType="int">
        select COUNT(*)
        from tb_user
        where (username=#{userName} or email=#{userName} )and question_answer=#{questionAnswer}
    </select>
    <delete id="deleteUser">
        delete from tb_user
        where user_id=#{userId}
    </delete>
<select id="similarFind" resultMap="userMap">
     SELECT user_id,username,status,available,last_editTime,create_time,email
    from tb_user
    where  username like "%"#{userString}"%" or email like "%"#{userString}"%"
    order by available asc , status desc ,create_time desc
</select>
    <select id="getUserStatus" resultType="int">
        SELECT status
        from tb_user
        where user_id =#{userId}
    </select>
</mapper>